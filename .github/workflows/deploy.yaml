name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  IMAGE_NAME: churn-prediction
  TAG: ${{ github.sha }}  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS credentials BEFORE ECR login
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run pytest
      run: |
        pytest test.py -v

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        region: ${{ secrets.AWS_REGION }}  

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:${{ env.TAG }} .

    - name: Tag and Push to ECR
      run: |
        FULL_IMAGE_NAME="${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"
        docker tag ${{ env.IMAGE_NAME }}:${{ env.TAG }} $FULL_IMAGE_NAME
        docker push $FULL_IMAGE_NAME
        echo "ECR_IMAGE=$FULL_IMAGE_NAME" >> $GITHUB_ENV

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
        chmod 600 ~/.ssh/ec2_key.pem

    - name: Deploy to EC2
      run: |
        ssh -i ~/.ssh/ec2_key.pem \
          -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
          "sudo apt-get update -y && \
          sudo apt-get install -y docker.io docker-compose && \
          sudo systemctl start docker && \
          mkdir -p ~/app && \
          cd ~/app && \
          [ -d $(basename \"${{ github.repository }}\") ] && \
          cd $(basename \"${{ github.repository }}\") && git pull || \
          git clone https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git && \
          cd $(basename \"${{ github.repository }}\") && \
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          sudo docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }} && \
          sed -i \"s|image:.*|image: $ECR_IMAGE|\" docker-compose.yml && \
          sudo docker-compose down || true && \
          sudo docker-compose pull && \
          sudo docker-compose up -d"