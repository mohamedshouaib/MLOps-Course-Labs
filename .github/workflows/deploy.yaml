name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Push to ECR & Deploy to EC2
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: shouaib533  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }} .

    - name: Tag & Push to ECR
      run: |
        ECR_URL=$(aws ecr describe-repositories --repository-names ${{ secrets.ECR_REPO }} --query 'repositories[0].repositoryUri' --output text)
        docker tag ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }} $ECR_URL:${{ env.IMAGE_TAG }}
        docker push $ECR_URL:${{ env.IMAGE_TAG }}
        echo "ECR_URL=$ECR_URL" >> $GITHUB_ENV

    - name: SSH & Deploy on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Clean up
          sudo rm -rf churn-app
          git clone https://github.com/${{ github.repository }} churn-app
          cd churn-app

          # Replace image in docker-compose with ECR image
          sed -i "s|build: app|image: ${{ env.ECR_URL }}:${{ env.IMAGE_TAG }}|" docker-compose.yaml

          # Run docker-compose
          docker-compose down || true
          docker-compose pull
          docker-compose up -d
