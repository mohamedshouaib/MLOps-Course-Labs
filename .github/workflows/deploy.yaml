name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  IMAGE_NAME: churn-prediction
  TAG: ${{ github.sha }}  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS credentials BEFORE ECR login
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run pytest
      run: |
        pytest test.py -v

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        region: ${{ secrets.AWS_REGION }}  

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:${{ env.TAG }} .

    - name: Tag and Push to ECR
      run: |
        FULL_IMAGE_NAME="${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"
        docker tag ${{ env.IMAGE_NAME }}:${{ env.TAG }} $FULL_IMAGE_NAME
        docker push $FULL_IMAGE_NAME
        echo "ECR_IMAGE=$FULL_IMAGE_NAME" >> $GITHUB_ENV

    - name: Setup SSH
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" | base64 -d > ec2_key.pem
        chmod 400 ec2_key.pem

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo yum update -y || sudo apt update -y
          sudo yum install -y git docker || sudo apt install -y git docker.io
          sudo service docker start || sudo systemctl start docker
          sudo usermod -aG docker $USER
          mkdir -p ~/shouaib
          cd ~/shouaib
          git clone https://github.com/${{ github.repository }} || cd $(basename "${{ github.repository }}") && git pull

          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

          cd $(basename "${{ github.repository }}")
          sed -i "s|image:.*|image: $ECR_IMAGE|" docker-compose.yml

          docker-compose down || true
          docker-compose pull
          docker-compose up -d
        EOF